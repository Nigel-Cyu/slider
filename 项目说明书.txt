jquery优酷轮播图

可视区域能看到的是三张图片，居中的是大图,z-index为100，透明度为1，两侧小图对称分布，透明度、z-index低一点，
与大图对齐在一个水平线上。

除了这三张图，它们的两侧各有一张图片，但是是隐藏的，主要是为了在进行轮播时能够流畅起来。

主体index.js用立即执行函数包裹，为了防止变量污染，给出一个接口，传入的参数可以是一组图片对象，
这样整个轮播图可以变成一个自由的插件。

在index.js的开头，先定义一个锁，防止在图片未渲染完成时用户又触发了点击事件。

然后声明一个init函数，它的作用主要是初始化可视区域那三张图片的位置，以及其他图片的状态，给他们的height都为0，
即都不显示，因为在结构上其实所有图片都是以浮动的形式排列的。

然后开始设计点击向前、向后按钮的回调函数，两者大致的结构步骤是差不多的，主要的区别就是设置上一张、下一张的图
片的尺寸、定位在数据上不同。图片的移动无非就是可视区域在排列的图片上向前或向后移动，然后跟随的是下方小圆点的
active class的移动，核心的方法其实就是索引的变化，也就是index的变化，初始化index为0，也就定位在最左边的小图，
当图片跳转到下一轮时，index++，指向下一张图片。

这里的index用了一个比较巧妙的思想，就是取余，即使index一直加加，变为一个很大的数，假设图片有8张，那就取余8，
取余后无论index多大，结果都只能是0到7之间，再套用jQuery的eq选择器，就能确定当前所指定的图片。

然后先让index取余为0的图片，height、透明度变为0，定位到可视区域的左侧，相当于让其向左运动并消失，这个使用
animate来达成效果。接着index取余为1的图片也就是前一轮的居中图片，也用animate让它的height、width变小一点，
z-index变为1，让下一张图片能覆盖它的一部分，达成层叠效果，定位上left=0。而之前在右侧的图片改变height、width
为最大，改变top、left使其居中，透明度变为1，z-index变为100。右侧隐藏的图片也通过animate将height有之前的0变为
240px，改变top、left让其替代前一张图片在最右侧。当这一轮图片变换完成，flag变回false，解锁。

向后按钮的回调函数与向前按钮相比，不同的就是图片的top、left改变的顺序，然后index--。

然后再通过$()获取前后按钮的dom，再用click分别进行绑定即可。

至于点击小圆点以获取相应的图片的点击函数，先用$().index获取所点击的小圆点是第几个，然后算出点击位置与当前
active圆点之间的差值，接着分情况进行讨论，第一种是当index--了很多次，是一个负数，也是先取余，得到一个0到-7
的一个数，然后加上8，得到此时active圆点的位置，再看如果active圆点在点击圆点的前面，那就用trigger触发相差次
数的向后按钮，反之就触发向前按钮；第二种情况就简单很多，index是一个正数或0,直接取余然后与点击圆点的位置比较，
进而判断是触发向前按钮还是向后按钮。

最后设置一个定时器，让向后按钮每隔一段事件触发一次，当鼠标进入wrapper时，清除定时器，移出后又设置定时器。



